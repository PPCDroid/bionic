# this file is used to list all the syscalls that will be supported by
# the Bionic C library. It is used to automatically generate the syscall
# stubs, the list of syscall constants (__NR_xxxx) and the content of <linux/_unitsd.h>
#
# each non comment line has the following format:
#
# return_type    func_name[:syscall_name[:call_id]]([parameter_list])  (#syscall_number|stub)
#
# note that:
#      - syscall_name correspond to the name of the syscall, which may differ from
#        the exported function name (example: the exit syscall is implemented by the _exit()
#        function, which is not the same as the standard C exit() function which calls it)
#        The call_id parameter, given that func_name and syscall_name have
#        been provided, allows the user to specify dispatch style syscalls.
#        For example, socket() syscall on i386 actually becomes:
#          socketcall(__NR_socket, 1, *(rest of args on stack)).
#
#      - each parameter type is assumed to be stored on 32 bits, there is no plan to support
#        64-bit architectures at the moment
#
#      - it there is "stub" instead of a syscall number, the tool will not generate any
#        assembler template for the syscall; it's up to the bionic implementation to provide
#        a relevant C stub
#
# the file is processed by a python script named gensyscalls.py
#

# process management
void    _exit:exit_group (int)      248:arm,252:x86,246:mips,234:ppc
void    _exit_thread:exit (int)	    1
pid_t   __fork:fork (void)           2
pid_t   _waitpid:waitpid (pid_t, int*, int, struct rusage*)   7:x86|mips|ppc
int     waitid(int, pid_t, struct siginfo_t*, int,void*)          280:arm,284:x86,278:mips,272:ppc
pid_t   __clone:clone(int (*fn)(void*), void *child_stack, int flags, void *arg)  120
int     execve (const char*, char* const*, char* const*)  11
int     setuid:setuid32 (uid_t)    213:arm|x86
uid_t   getuid:getuid32 ()         199:arm|x86
gid_t   getgid:getgid32 ()         200:arm|x86
uid_t   geteuid:geteuid32 ()       201:arm|x86
gid_t   getegid:getegid32 ()       202:arm|x86
uid_t   getresuid:getresuid32 ()   209:arm|x86
gid_t   getresgid:getresgid32 ()   211:arm|x86
int     setuid:setuid (uid_t)    23:mips|ppc
uid_t   getuid:getuid ()         24:mips|ppc
gid_t   getgid:getgid ()         47:mips|ppc
uid_t   geteuid:geteuid ()       49:mips|ppc
gid_t   getegid:getegid ()       50:mips|ppc
uid_t   getresuid:getresuid ()   186:mips,165:ppc
gid_t   getresgid:getresgid ()   191:mips,170:ppc
pid_t   gettid()                   224:arm|x86,222:mips,207:ppc
int     getgroups:getgroups32(int, gid_t *)    205:arm|x86
int     getgroups:getgroups(int, gid_t *)    80:mips|ppc
pid_t   getpgid(pid_t)             132
pid_t   getppid()		   64
pid_t   setsid()                   66
int     setgid:setgid32(gid_t)     214:arm|x86
int     setgid:setgid(gid_t)       46:mips|ppc
int     seteuid:seteuid32(uid_t)   stub
int     setreuid:setreuid32(uid_t, uid_t)   203:arm|x86
int     setreuid:setreuid(uid_t, uid_t)   70:mips|ppc
int     setresuid:setresuid32(uid_t, uid_t, uid_t)   208:arm|x86
int     setresuid:setresuid(uid_t, uid_t, uid_t)     185:mips,164:ppc
int     setresgid:setresgid32(gid_t, gid_t, gid_t)   210:arm|x86
int     setresgid:setresgid(gid_t, gid_t, gid_t)     190:mips,169:ppc
void*   __brk:brk(void*)           45
# see comments in arch-arm/bionic/kill.S to understand why we don't generate an ARM stub for kill/tkill
int     kill(pid_t, int)           37:x86|mips|ppc
int     tkill(pid_t tid, int sig)  238:x86,236:mips,208:ppc
int     __ptrace:ptrace(int request, int pid, void* addr, void* data)  26
int     __set_thread_area:set_thread_area(void*  user_desc)  243:x86
int	__set_tls:set_thread_area(void * user_desc)	283:mips
int     __getpriority:getpriority(int, int)  96
int     setpriority(int, int, int)   97
int     setrlimit(int resource, const struct rlimit *rlp)  75
int     getrlimit:ugetrlimit(int resource, struct rlimit *rlp)  191:arm|x86,190:ppc
int     getrlimit:getrlimit(int resource, struct rlimit *rlp)  76:mips
int     getrusage(int who, struct rusage*  r_usage)  77
int     setgroups:setgroups32(int, const gid_t *)   206:arm|x86
int     setgroups:setgroups(int, const gid_t *)   81:mips|ppc
pid_t   getpgrp(void)  stub
int     setpgid(pid_t, pid_t)  57
pid_t   vfork(void)  190:arm,189:ppc
int     setregid:setregid32(gid_t, gid_t)  204:arm|x86
int     setregid:setregid(gid_t, gid_t)  71:mips|ppc
int     chroot(const char *)  61
int     prctl(int option, unsigned int arg2, unsigned int arg3, unsigned int arg4, unsigned int arg5)  172:arm|x86,171:ppc,192:mips
int     capget(cap_user_header_t header, cap_user_data_t data) 184:arm|x86,204:mips,183:ppc
int     capset(cap_user_header_t header, const cap_user_data_t data) 185:arm|x86,205:mips,184:ppc
int     acct(const char*  filepath)  51

# file descriptors
ssize_t     read (int, void*, size_t)        3
ssize_t     write (int, const void*, size_t)       4
ssize_t     __pread64:pread64 (int, void *, size_t, off_t, off_t) 180:arm|x86,200:mips,179:ppc
ssize_t     __pwrite64:pwrite64 (int, void *, size_t, off_t, off_t) 181:arm|x86,201:mips,180:ppc
int         __open:open (const char*, int, mode_t)  5
int         __openat:openat (int, const char*, int, mode_t)  322:arm,295:x86,288:mips,286:ppc
int         close (int)                      6
int         creat(const char*, mode_t)       stub
off_t       lseek(int, off_t, int)           19
int         __llseek:_llseek (int, unsigned long, unsigned long, loff_t*, int)  140
pid_t       getpid ()    20
void *      mmap(void *, size_t, int, int, int, long)  stub
void *      __mmap2:mmap2(void*, size_t, int, int, int, long)   192:arm|x86|ppc,210:mips
int         munmap(void *, size_t)  91
void *      mremap(void *, size_t, size_t, unsigned long)  163:arm|x86|ppc,167:mips
int         msync(const void *, size_t, int)    144
int         mprotect(const void *, size_t, int)  125
int         madvise(const void *, size_t, int)  220:arm,219:x86,218:mips,205:ppc
int         mlock(const void *addr, size_t len)    150:arm|x86|ppc,154:mips
int         munlock(const void *addr, size_t len)   151:arm|x86|ppc,155:mips
int         mincore(void*  start, size_t  length, unsigned char*  vec)   219:arm,218:x86,217:mips,206:ppc
int         __ioctl:ioctl(int, int, void *)  54
int         readv(int, const struct iovec *, int)   145
int         writev(int, const struct iovec *, int)  146
int         __fcntl:fcntl(int, int, void*)  55
int         flock(int, int)   143
int         fchmod(int, mode_t)  94
int         dup(int)  41
int         pipe(int *)  42:arm|x86|ppc
int         dup2(int, int)   63
int         select:_newselect(int, struct fd_set *, struct fd_set *, struct fd_set *, struct timeval *)  142
int         ftruncate(int, off_t)  93
int         getdents:getdents64(unsigned int, struct dirent *, unsigned int)   217:arm,220:x86,219:mips,202:ppc
int         fsync(int)  118
int         fchown:fchown32(int, uid_t, gid_t)  207:arm|x86
int         fchown:fchown(int, uid_t, gid_t)  95:mips|ppc
void        sync(void)  36
int         __fcntl64:fcntl64(int, int, void *)  221:arm|x86,220:mips,204:ppc
int         fstatfs:fstatfs64(int, size_t, struct statfs *)  267:arm,269:x86,256:mips,253:ppc
ssize_t     sendfile(int out_fd, int in_fd, off_t *offset, size_t count)  187:arm|x86,207:mips,186:ppc
int         fstatat:fstatat64(int dirfd, const char *path, struct stat *buf, int flags)   327:arm,300:x86,293:mips,291:ppc
int         mkdirat(int dirfd, const char *pathname, mode_t mode)  323:arm,296:x86,289:mips,287:ppc
int         fchownat(int dirfd, const char *path, uid_t owner, gid_t group, int flags)  325:arm,298:x86,291:mips,289:ppc
int         fchmodat(int dirfd, const char *path, mode_t mode, int flags)  333:arm,306:x86,299:mips,297:ppc
int         renameat(int olddirfd, const char *oldpath, int newdirfd, const char *newpath)  329:arm,302:x86,295:mips,293:ppc

# file system
int     link (const char*, const char*)  9
int     unlink (const char*)             10
int     unlinkat (int, const char *, int)   328:arm,301:x86,294:mips,292:ppc
int     chdir (const char*)              12
int     mknod (const char*, mode_t, dev_t)  14
int     chmod (const char*,mode_t)          15
int     chown:chown32(const char *, uid_t, gid_t)  212:arm|x86
int     lchown:lchown32 (const char*, uid_t, gid_t)  198:arm|x86
int     chown:chown(const char *, uid_t, gid_t)  202:mips,181:ppc
int     lchown:lchown (const char*, uid_t, gid_t)  16:mips|ppc
int     mount (const char*, const char*, const char*, unsigned long, const void*)  21
int     umount(const char*)  stub
int     umount2 (const char*, int)  52
int     fstat:fstat64(int, struct stat*)    197:arm|x86|ppc,215:mips
int     stat:stat64(const char *, struct stat *)  195:arm|x86|ppc,213:mips
int     lstat:lstat64(const char *, struct stat *)  196:arm|x86|ppc,214:mips
int     mkdir(const char *, mode_t) 39
int     readlink(const char *, char *, size_t)  85
int     rmdir(const char *)  40
int     rename(const char *, const char *)  38
int     __getcwd:getcwd(char * buf, size_t size)  183:arm|x86,203:mips,182:ppc
int     access(const char *, int)  33
int     symlink(const char *, const char *)  83
int     fchdir(int)    133
int     truncate(const char*, off_t)    92
int     __statfs64:statfs64(const char *, size_t, struct statfs *)  266:arm,268:x86,255:mips,252:ppc

# time
int           pause ()                       29
int           gettimeofday(struct timeval*, struct timezone*)       78
int           settimeofday(const struct timeval*, const struct timezone*)   79
clock_t       times(struct tms *)       43
int           nanosleep(const struct timespec *, struct timespec *)   162:arm|x86|ppc,166:mips
int           clock_gettime(clockid_t clk_id, struct timespec *tp)    263:arm|mips,265:x86,246:ppc
int           clock_settime(clockid_t clk_id, const struct timespec *tp)  262:arm|mips,264:x86,245:ppc
int           clock_getres(clockid_t clk_id, struct timespec *res)   264:arm|mips,266:x86,247:ppc
int           clock_nanosleep(const struct timespec *req, struct timespec *rem)  265:arm|mips,267:x86,248:ppc
int           getitimer(int, const struct itimerval *)   105
int           setitimer(int, const struct itimerval *, struct itimerval *)  104
int           __timer_create:timer_create(clockid_t clockid, struct sigevent *evp, timer_t *timerid)    257:arm|mips,259:x86,240:ppc
int           __timer_settime:timer_settime(timer_t, int, const struct itimerspec*, struct itimerspec*) 258:arm|mips,260:x86,241:ppc
int           __timer_gettime:timer_gettime(timer_t, struct itimerspec*)                                259:arm|mips,261:x86,242:ppc
int           __timer_getoverrun:timer_getoverrun(timer_t)                                              260:arm|mips,262:x86,243:ppc
int           __timer_delete:timer_delete(timer_t)                                                      261:arm|mips,263:x86,244:ppc
int           utimes(const char*, const struct timeval tvp[2])                          269:arm,271:x86,267:mips,251:ppc

# signals
int     sigaction(int, const struct sigaction *, struct sigaction *)  67
int     sigprocmask(int, const sigset_t *, sigset_t *)  126
int     __sigsuspend:sigsuspend(int unused1, int unused2, unsigned mask)  72
int     __rt_sigaction:rt_sigaction (int sig, const struct sigaction *act, struct sigaction *oact, size_t sigsetsize)  174:arm|x86,194:mips,173:ppc
int     __rt_sigprocmask:rt_sigprocmask (int  how, const sigset_t *set, sigset_t *oset, size_t sigsetsize)  175:arm|x86,195:mips,174:ppc
int     __rt_sigtimedwait:rt_sigtimedwait(const sigset_t *set, struct siginfo_t  *info, struct timespec_t  *timeout, size_t  sigset_size)  177:arm|x86,197:mips,176:ppc
int     sigpending(sigset_t *)  73

# sockets
int           socket(int, int, int)              281:arm,183:mips
int           socketpair(int, int, int, int*)    288:arm,184:mips
int           bind(int, struct sockaddr *, int)  282:arm,169:mips
int           connect(int, struct sockaddr *, socklen_t)   283:arm,170:mips
int           listen(int, int)                   284:arm,174:mips
int           accept(int, struct sockaddr *, socklen_t *)  285:arm,168:mips
int           getsockname(int, struct sockaddr *, socklen_t *)  286:arm,172:mips
int           getpeername(int, struct sockaddr *, socklen_t *)  287:arm,171:mips
int           sendto(int, const void *, size_t, int, const struct sockaddr *, socklen_t)  290:arm,180:mips
int           recvfrom(int, void *, size_t, unsigned int, struct sockaddr *, socklen_t *)  292:arm,176:mips
int           shutdown(int, int)  293:arm,182:mips
int           setsockopt(int, int, int, const void *, socklen_t)  294:arm,181:mips
int           getsockopt(int, int, int, void *, socklen_t *)    295:arm,173:mips
int           sendmsg(int, const struct msghdr *, unsigned int)  296:arm,179:mips
int           recvmsg(int, struct msghdr *, unsigned int)   297:arm,177:mips

# sockets for x86/ppc. These are done as an "indexed" call to socketcall syscall.
int           socket:socketcall:1 (int, int, int) 102:x86|ppc
int           bind:socketcall:2 (int, struct sockaddr *, int)  102:x86|ppc
int           connect:socketcall:3(int, struct sockaddr *, socklen_t)   102:x86|ppc
int           listen:socketcall:4(int, int)                   102:x86|ppc
int           accept:socketcall:5(int, struct sockaddr *, socklen_t *)  102:x86|ppc
int           getsockname:socketcall:6(int, struct sockaddr *, socklen_t *)  102:x86|ppc
int           getpeername:socketcall:7(int, struct sockaddr *, socklen_t *)  102:x86|ppc
int           socketpair:socketcall:8(int, int, int, int*)    102:x86|ppc
int           sendto:socketcall:11(int, const void *, size_t, int, const struct sockaddr *, socklen_t)  102:x86|ppc
int           recvfrom:socketcall:12(int, void *, size_t, unsigned int, struct sockaddr *, socklen_t *)  102:x86|ppc
int           shutdown:socketcall:13(int, int)  102:x86|ppc
int           setsockopt:socketcall:14(int, int, int, const void *, socklen_t)  102:x86|ppc
int           getsockopt:socketcall:15(int, int, int, void *, socklen_t *)    102:x86|ppc
int           sendmsg:socketcall:16(int, const struct msghdr *, unsigned int)  102:x86|ppc
int           recvmsg:socketcall:17(int, struct msghdr *, unsigned int)   102:x86|ppc

# scheduler & real-time
int sched_setscheduler(pid_t pid, int policy, const struct sched_param *param)  156:arm|x86|ppc,160:mips
int sched_getscheduler(pid_t pid)  157:arm|x86|ppc,161:mips
int sched_yield(void)  158:arm|x86|ppc,162:mips
int sched_setparam(pid_t pid, const struct sched_param *param)  154:arm|x86|ppc,158:mips
int sched_getparam(pid_t pid, struct sched_param *param)  155:arm|x86|ppc,159:mips
int sched_get_priority_max(int policy)  159:arm|x86|ppc,163:mips
int sched_get_priority_min(int policy)  160:arm|x86|ppc,164:mips
int sched_rr_get_interval(pid_t pid, struct timespec *interval)  161:arm|x86|ppc,165:mips

# other
int     uname(struct utsname *)  122
pid_t   __wait4:wait4(pid_t pid, int *status, int options, struct rusage *rusage)   114
mode_t  umask(mode_t)  60
int      __reboot:reboot(int, int, int, void *)  88
int     __syslog:syslog(int, char *, int)  103
int     init_module(void *, unsigned long, const char *)  128
int     delete_module(const char*, unsigned int)   129
int     klogctl:syslog(int, char *, int)   103

# futex
int	futex(void *, int, int, void *, void *, int) 240:arm|x86,238:mips,221:ppc

# epoll
int     epoll_create(int size)     250:arm,254:x86,248:mips,236:ppc
int     epoll_ctl(int epfd, int op, int fd, struct epoll_event *event)    251:arm,255:x86,249:mips,237:ppc
int     epoll_wait(int epfd, struct epoll_event *events, int max, int timeout)   252:arm,256:x86,250:mips,238:ppc

int     inotify_init(void)      316:arm,291:x86,284:mips,275:ppc
int     inotify_add_watch(int, const char *, unsigned int)  317:arm,292:x86,285:mips,276:ppc
int     inotify_rm_watch(int, unsigned int)  318:arm,293:x86,286:mips,277:ppc

int     poll(struct pollfd *, unsigned int, long)  168:arm|x86,188:mips,167:ppc

# ARM-specific ARM_NR_BASE == 0x0f0000 == 983040
int     __set_tls:ARM_set_tls(void*)                                 983045:arm
int     cacheflush:ARM_cacheflush(long start, long end, long flags)  983042:arm

# MIPS
int     cacheflush:cacheflush(long start, long end, long flags)  147:mips
